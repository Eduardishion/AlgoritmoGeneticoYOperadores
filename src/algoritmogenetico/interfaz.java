/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algoritmogenetico;
import java.awt.BasicStroke;
import java.awt.Color;
import javafx.scene.chart.NumberAxis;
import javax.swing.AbstractButton;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.RectangleInsets;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartUtilities;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Eduardishion
 */
public class interfaz extends javax.swing.JFrame {
   
    metodosGeneticos obj=new metodosGeneticos(10,8,3,0);
    /**
     * Creates new form interfaz
     */
    public interfaz() {
       
        initComponents();
        
        tindividuos.setEditable(false);
        tgenes.setEditable(false);
        tgeneraciones.setEditable(false);
        tmaximo.setEditable(false);
        tmaximo2.setEditable(false);
        tmaximo3.setEditable(false);
        tmuestra.setEditable(false);
        tmuestra.setEnabled(false);
        smuestra.setEnabled(false);
        smaximo.setEnabled(false);
        smaximo2.setEnabled(false);
        smaximo3.setEnabled(false);
        
        
        sgeneraciones.setValue(3);
        sindividuos.setValue(10);
        sgenes.setValue(8);
        smuestra.setValue(2);
        smaximo.setValue(1);
        smaximo2.setValue(1);
        smaximo3.setValue(1);
    
        porcentajeMutacion.setSelectedIndex(9);
        
        seleciones.add(seleccionAletotia);
        seleciones.add(seleccionTorneo);
        seleciones.add(seleccionRuleta);
        seleciones.add(seleccionMuestreoEstoco);
        
        cruzas.add(cruzaunPunto);
        cruzas.add(cruzadosPuntos);
        cruzas.add(cruzapuntoUniforme);
        cruzas.add(cruzamaneraAdaptativa);
        cruzas.add(cruzaMultipunto);
        cruzas.add(cruzaMultipuntoUniforme);
        cruzas.add(cruzaMultipuntoAdaptativa);
        
        mutacion.add(mutacionPorInvercion);
        
        
        seleccionAletotia.setSelected(true);
        cruzaunPunto.setSelected(true);
        mutacionPorInvercion.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seleciones = new javax.swing.ButtonGroup();
        cruzas = new javax.swing.ButtonGroup();
        mutacion = new javax.swing.ButtonGroup();
        panelPrincipal = new javax.swing.JPanel();
        pesta√±as = new javax.swing.JTabbedPane();
        operadoresDeSeleccion = new javax.swing.JPanel();
        seleccionAletotia = new javax.swing.JRadioButton();
        seleccionRuleta = new javax.swing.JRadioButton();
        seleccionTorneo = new javax.swing.JRadioButton();
        seleccionMuestreoEstoco = new javax.swing.JRadioButton();
        smuestra = new javax.swing.JSlider();
        tmuestra = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        operadoresDeCruzadeUnpunto = new javax.swing.JPanel();
        cruzaunPunto = new javax.swing.JRadioButton();
        cruzadosPuntos = new javax.swing.JRadioButton();
        cruzapuntoUniforme = new javax.swing.JRadioButton();
        cruzamaneraAdaptativa = new javax.swing.JRadioButton();
        operadoresDeCruzaMultipunto = new javax.swing.JPanel();
        smaximo = new javax.swing.JSlider();
        smaximo2 = new javax.swing.JSlider();
        smaximo3 = new javax.swing.JSlider();
        tmaximo = new javax.swing.JTextField();
        tmaximo3 = new javax.swing.JTextField();
        tmaximo2 = new javax.swing.JTextField();
        cruzaMultipunto = new javax.swing.JRadioButton();
        cruzaMultipuntoUniforme = new javax.swing.JRadioButton();
        cruzaMultipuntoAdaptativa = new javax.swing.JRadioButton();
        operadoresdeMutacion = new javax.swing.JPanel();
        porcentajeMutacion = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        mutacionPorInvercion = new javax.swing.JRadioButton();
        parametros = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sindividuos = new javax.swing.JSlider();
        sgenes = new javax.swing.JSlider();
        sgeneraciones = new javax.swing.JSlider();
        tindividuos = new javax.swing.JTextField();
        tgenes = new javax.swing.JTextField();
        tgeneraciones = new javax.swing.JTextField();
        guardar = new javax.swing.JCheckBox();
        visualizacion = new javax.swing.JPanel();
        generar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        setMaximumSize(new java.awt.Dimension(900, 700));
        setPreferredSize(new java.awt.Dimension(990, 700));

        panelPrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder("Principal"));

        operadoresDeSeleccion.setBorder(javax.swing.BorderFactory.createTitledBorder("Operadores de Seleccion"));

        seleccionAletotia.setText("Seleccion Aleatoria");
        seleccionAletotia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionAletotiaActionPerformed(evt);
            }
        });

        seleccionRuleta.setText("Seleccion por Ruleta");
        seleccionRuleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionRuletaActionPerformed(evt);
            }
        });

        seleccionTorneo.setText("Seleccion por Torneo");
        seleccionTorneo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionTorneoActionPerformed(evt);
            }
        });

        seleccionMuestreoEstoco.setText("Seleccion Muestreo Estocastico");
        seleccionMuestreoEstoco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionMuestreoEstocoActionPerformed(evt);
            }
        });

        smuestra.setPaintTicks(true);
        smuestra.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                smuestraStateChanged(evt);
            }
        });

        jLabel4.setText("de los individuos posibles de la muestra ");

        javax.swing.GroupLayout operadoresDeSeleccionLayout = new javax.swing.GroupLayout(operadoresDeSeleccion);
        operadoresDeSeleccion.setLayout(operadoresDeSeleccionLayout);
        operadoresDeSeleccionLayout.setHorizontalGroup(
            operadoresDeSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operadoresDeSeleccionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(operadoresDeSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seleccionAletotia)
                    .addComponent(seleccionMuestreoEstoco)
                    .addGroup(operadoresDeSeleccionLayout.createSequentialGroup()
                        .addGroup(operadoresDeSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seleccionRuleta)
                            .addGroup(operadoresDeSeleccionLayout.createSequentialGroup()
                                .addComponent(seleccionTorneo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(smuestra, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14)
                        .addComponent(tmuestra, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        operadoresDeSeleccionLayout.setVerticalGroup(
            operadoresDeSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operadoresDeSeleccionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(seleccionAletotia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(operadoresDeSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(operadoresDeSeleccionLayout.createSequentialGroup()
                        .addComponent(seleccionRuleta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(operadoresDeSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seleccionTorneo)
                            .addComponent(smuestra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(operadoresDeSeleccionLayout.createSequentialGroup()
                        .addGroup(operadoresDeSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tmuestra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(5, 5, 5)))
                .addComponent(seleccionMuestreoEstoco)
                .addGap(66, 66, 66))
        );

        pesta√±as.addTab("Seleccion", operadoresDeSeleccion);

        operadoresDeCruzadeUnpunto.setBorder(javax.swing.BorderFactory.createTitledBorder("Operadores de Cruza"));

        cruzaunPunto.setText("Cruza de un punto");
        cruzaunPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cruzaunPuntoActionPerformed(evt);
            }
        });

        cruzadosPuntos.setText("Cruza de dos puntos");
        cruzadosPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cruzadosPuntosActionPerformed(evt);
            }
        });

        cruzapuntoUniforme.setText("Cruza de un punto uniforme");
        cruzapuntoUniforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cruzapuntoUniformeActionPerformed(evt);
            }
        });

        cruzamaneraAdaptativa.setText("Cruza de un punto de manera adaptativa");
        cruzamaneraAdaptativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cruzamaneraAdaptativaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout operadoresDeCruzadeUnpuntoLayout = new javax.swing.GroupLayout(operadoresDeCruzadeUnpunto);
        operadoresDeCruzadeUnpunto.setLayout(operadoresDeCruzadeUnpuntoLayout);
        operadoresDeCruzadeUnpuntoLayout.setHorizontalGroup(
            operadoresDeCruzadeUnpuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operadoresDeCruzadeUnpuntoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(operadoresDeCruzadeUnpuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, operadoresDeCruzadeUnpuntoLayout.createSequentialGroup()
                        .addGroup(operadoresDeCruzadeUnpuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cruzadosPuntos)
                            .addComponent(cruzapuntoUniforme)
                            .addComponent(cruzamaneraAdaptativa))
                        .addGap(27, 308, Short.MAX_VALUE))
                    .addGroup(operadoresDeCruzadeUnpuntoLayout.createSequentialGroup()
                        .addComponent(cruzaunPunto)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        operadoresDeCruzadeUnpuntoLayout.setVerticalGroup(
            operadoresDeCruzadeUnpuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operadoresDeCruzadeUnpuntoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cruzaunPunto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cruzadosPuntos, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cruzapuntoUniforme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cruzamaneraAdaptativa)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pesta√±as.addTab("Cruzas de un ponto", operadoresDeCruzadeUnpunto);

        operadoresDeCruzaMultipunto.setBorder(javax.swing.BorderFactory.createTitledBorder("Operadores de cruza de multipunto"));

        smaximo.setMajorTickSpacing(1);
        smaximo.setPaintTicks(true);
        smaximo.setValue(0);
        smaximo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                smaximoStateChanged(evt);
            }
        });

        smaximo2.setPaintTicks(true);
        smaximo2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                smaximo2StateChanged(evt);
            }
        });

        smaximo3.setPaintTicks(true);
        smaximo3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                smaximo3StateChanged(evt);
            }
        });

        cruzaMultipunto.setText("Cruza multipunto");
        cruzaMultipunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cruzaMultipuntoActionPerformed(evt);
            }
        });

        cruzaMultipuntoUniforme.setText("Cruza multipunto unifome");
        cruzaMultipuntoUniforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cruzaMultipuntoUniformeActionPerformed(evt);
            }
        });

        cruzaMultipuntoAdaptativa.setText("Cruza multipunto adaptativa");
        cruzaMultipuntoAdaptativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cruzaMultipuntoAdaptativaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout operadoresDeCruzaMultipuntoLayout = new javax.swing.GroupLayout(operadoresDeCruzaMultipunto);
        operadoresDeCruzaMultipunto.setLayout(operadoresDeCruzaMultipuntoLayout);
        operadoresDeCruzaMultipuntoLayout.setHorizontalGroup(
            operadoresDeCruzaMultipuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operadoresDeCruzaMultipuntoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(operadoresDeCruzaMultipuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cruzaMultipunto)
                    .addComponent(cruzaMultipuntoUniforme)
                    .addComponent(cruzaMultipuntoAdaptativa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(operadoresDeCruzaMultipuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(operadoresDeCruzaMultipuntoLayout.createSequentialGroup()
                        .addComponent(smaximo3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tmaximo3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(operadoresDeCruzaMultipuntoLayout.createSequentialGroup()
                        .addComponent(smaximo2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tmaximo2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(operadoresDeCruzaMultipuntoLayout.createSequentialGroup()
                        .addComponent(smaximo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tmaximo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(141, 141, 141))
        );
        operadoresDeCruzaMultipuntoLayout.setVerticalGroup(
            operadoresDeCruzaMultipuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operadoresDeCruzaMultipuntoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(operadoresDeCruzaMultipuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(smaximo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(operadoresDeCruzaMultipuntoLayout.createSequentialGroup()
                        .addGroup(operadoresDeCruzaMultipuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(operadoresDeCruzaMultipuntoLayout.createSequentialGroup()
                                .addComponent(cruzaMultipunto)
                                .addGap(18, 18, 18)
                                .addComponent(cruzaMultipuntoUniforme))
                            .addGroup(operadoresDeCruzaMultipuntoLayout.createSequentialGroup()
                                .addGroup(operadoresDeCruzaMultipuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(smaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tmaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(operadoresDeCruzaMultipuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(smaximo2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tmaximo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(operadoresDeCruzaMultipuntoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cruzaMultipuntoAdaptativa)
                            .addComponent(tmaximo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pesta√±as.addTab("Cruzas multipunto", operadoresDeCruzaMultipunto);

        operadoresdeMutacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Mutacion"));

        porcentajeMutacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1.0" }));
        porcentajeMutacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porcentajeMutacionActionPerformed(evt);
            }
        });

        jLabel6.setText("Probabilidad de mutacion");

        mutacionPorInvercion.setText("Mutacion por invercion");
        mutacionPorInvercion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mutacionPorInvercionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout operadoresdeMutacionLayout = new javax.swing.GroupLayout(operadoresdeMutacion);
        operadoresdeMutacion.setLayout(operadoresdeMutacionLayout);
        operadoresdeMutacionLayout.setHorizontalGroup(
            operadoresdeMutacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operadoresdeMutacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mutacionPorInvercion)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(porcentajeMutacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(203, Short.MAX_VALUE))
        );
        operadoresdeMutacionLayout.setVerticalGroup(
            operadoresdeMutacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operadoresdeMutacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(operadoresdeMutacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mutacionPorInvercion)
                    .addComponent(jLabel6)
                    .addComponent(porcentajeMutacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        pesta√±as.addTab("Mutacion", operadoresdeMutacion);

        parametros.setBorder(javax.swing.BorderFactory.createTitledBorder("Parametros de inicio"));

        jLabel1.setText("No¬∞ de individuos");

        jLabel2.setText("No¬∞ de genes");

        jLabel3.setText("No¬∞ de generaciones");

        sindividuos.setMajorTickSpacing(10);
        sindividuos.setMaximum(200);
        sindividuos.setMinimum(10);
        sindividuos.setPaintTicks(true);
        sindividuos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sindividuosStateChanged(evt);
            }
        });

        sgenes.setMajorTickSpacing(2);
        sgenes.setMinimum(8);
        sgenes.setMinorTickSpacing(10);
        sgenes.setPaintTicks(true);
        sgenes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sgenesStateChanged(evt);
            }
        });

        sgeneraciones.setMajorTickSpacing(5);
        sgeneraciones.setMaximum(300);
        sgeneraciones.setMinimum(3);
        sgeneraciones.setPaintTicks(true);
        sgeneraciones.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sgeneracionesStateChanged(evt);
            }
        });

        guardar.setText("Guardar imagen de grafica");

        javax.swing.GroupLayout parametrosLayout = new javax.swing.GroupLayout(parametros);
        parametros.setLayout(parametrosLayout);
        parametrosLayout.setHorizontalGroup(
            parametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parametrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parametrosLayout.createSequentialGroup()
                        .addGroup(parametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(15, 15, 15)
                        .addGroup(parametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sindividuos, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(sgenes, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(sgeneraciones, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(parametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tgeneraciones, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(tindividuos)
                            .addComponent(tgenes))
                        .addGap(15, 15, 15))
                    .addGroup(parametrosLayout.createSequentialGroup()
                        .addComponent(guardar)
                        .addContainerGap(204, Short.MAX_VALUE))))
        );
        parametrosLayout.setVerticalGroup(
            parametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parametrosLayout.createSequentialGroup()
                .addGroup(parametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parametrosLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel1))
                    .addGroup(parametrosLayout.createSequentialGroup()
                        .addGroup(parametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sindividuos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tindividuos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(parametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(sgenes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tgenes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(parametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tgeneraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sgeneraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardar)
                .addContainerGap())
        );

        visualizacion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Visualizacion de comportamiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N
        visualizacion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout visualizacionLayout = new javax.swing.GroupLayout(visualizacion);
        visualizacion.setLayout(visualizacionLayout);
        visualizacionLayout.setHorizontalGroup(
            visualizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 965, Short.MAX_VALUE)
        );
        visualizacionLayout.setVerticalGroup(
            visualizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 379, Short.MAX_VALUE)
        );

        generar.setText("Generar poblacion");
        generar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(visualizacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(generar)
                .addGroup(panelPrincipalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(parametros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(pesta√±as, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(visualizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(parametros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pesta√±as, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(generar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarActionPerformed
                
                
                
        //try {
 
                int numeroIndividuos=sindividuos.getValue();
                int numeroGenes=sgenes.getValue();
                int numeroGeneraciones=sgeneraciones.getValue();
                
                obj.redimecionarTodo(numeroIndividuos,numeroGenes,numeroGeneraciones);
                if(cruzaMultipunto.isSelected()){
                    obj.setNumeroCortes(smaximo.getValue());
                }else{
                    if(cruzaMultipuntoUniforme.isSelected()){
                        obj.setNumeroCortes(smaximo2.getValue());
                    }else{
                        if(cruzaMultipuntoAdaptativa.isSelected()){
                            obj.setNumeroCortes(smaximo3.getValue());
                        }
                    }
                }
                obj.setMuestra(smuestra.getValue());
                String porcentaje=(String)porcentajeMutacion.getSelectedItem();
                obj.setPorcentaje(Double.parseDouble(porcentaje));
                
                if(sindividuos.getValue()==0){
                    System.out.println("no hay datos de individuos");
                }else{
                    if(sgenes.getValue()==0){
                        System.out.println("no hay datos en genes");
                    }else{
                        if(sindividuos.getValue()==0){
                            System.out.println("no hay datos en generaciones");
                        }
                    }
                }
                
                // TODO add your handling code here:
                if(seleccionAletotia.isSelected() ){
                    obj.setOpcionDeSeleccion("Aleatoria");
                }else{
                    if(seleccionRuleta.isSelected()){
                        obj.setOpcionDeSeleccion("Ruleta");
                    }else{
                        if(seleccionTorneo.isSelected()){
                            obj.setOpcionDeSeleccion("Torneo");
                        }else{
                            if(seleccionMuestreoEstoco.isSelected()){
                                obj.setOpcionDeSeleccion("MuestreoEstocastico");
                            }
                        }
                    }
                }

                if(cruzaunPunto.isSelected() ){
                    obj.setOpcionCruza("cruzaUnPunto");
                }else{
                    if(cruzadosPuntos.isSelected()){
                       obj.setOpcionCruza("cruzaDedosPuntos");
                    }else{
                        if(cruzapuntoUniforme.isSelected()){
                           obj.setOpcionCruza("cruzedeUnPuntoUniforme");
                        }else{
                            if(cruzamaneraAdaptativa.isSelected()){
                               obj.setOpcionCruza("cruzedeUnpuntoManeraApaptativa");
                            }else{
                                if(cruzaMultipunto.isSelected()){
                                    obj.setOpcionCruza("cruzaMultipunto");
                                }else{
                                    if(cruzaMultipuntoUniforme.isSelected()){
                                        obj.setOpcionCruza("cruzaMultipuntoUniforme");
                                    }else{
                                        if(cruzaMultipuntoAdaptativa.isSelected()){
                                            obj.setOpcionCruza("cruzaMultipuntoAdaptativa");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

                
                obj.setNumeroDeIndividuos(numeroIndividuos);
                obj.setNumeroDeGenes(numeroGenes);
                obj.setNumeroDeGeneraciones(numeroGeneraciones);
                
                obj.generarPoblacion();
                int num=obj.getNumeroDeGeneraciones();
                
                double vector[]=new double [num];
                vector=obj.getMejoresInvidiosDegeneraciones();
        
                XYSeries generaciones = new XYSeries("Generaciones");

                for (int i = 0; i < vector.length; i++) {

                    generaciones.add((int)i,vector[i]);

                }

                XYSeriesCollection dataset = new XYSeriesCollection();
                dataset.addSeries(generaciones);



                JFreeChart chart = ChartFactory.createXYLineChart(
                        "Evolucion de individuos",
                        "Generaciones",
                        "F(x) de aptitud",
                        dataset,
                        PlotOrientation.VERTICAL,
                        false,
                        false,
                        false
                );



             // Mostramos la grafica dentro del jPanel1
             ChartPanel panel = new ChartPanel(chart);  

             final XYPlot plot = chart.getXYPlot( );
             XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer( );
             renderer.setSeriesPaint( 0 , Color.magenta ); 
             chart.setBackgroundPaint(new Color(236, 231, 236));
             renderer.setSeriesStroke( 0 , new BasicStroke( 1.0f ) );
             //renderer.setBaseShapesVisible(true);
             //renderer.setBaseShapesFilled (true);

             plot.setRenderer( renderer ); 
             plot.setBackgroundPaint(Color.DARK_GRAY);
             plot.setAxisOffset            (new RectangleInsets(5, 0, 10, 1));
             //plot.setRangeAxis(100, null);
             plot.setDomainCrosshairVisible(true);
             plot.setRangeCrosshairVisible (true);


            visualizacion.setLayout(new java.awt.BorderLayout());
            visualizacion.add(panel);   
            visualizacion.validate();
            
            if(guardar.isSelected()){
                    try {
                        ChartUtilities.saveChartAsJPEG(new File("grafico.jpg"), chart, 1000, 500);
                    } catch (IOException ex) {
                        Logger.getLogger(interfaz.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
       
            
    }//GEN-LAST:event_generarActionPerformed

    private void sindividuosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sindividuosStateChanged
        // TODO add your handling code here:
        tindividuos.setText(""+sindividuos.getValue());
    }//GEN-LAST:event_sindividuosStateChanged

    private void sgenesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sgenesStateChanged
        // TODO add your handling code here:
        tgenes.setText(""+sgenes.getValue());
        smaximo.setMaximum(sgenes.getValue()-1);
        smaximo.setMinimum(1);
        
        smaximo2.setMaximum(sgenes.getValue()-1);
        smaximo2.setMinimum(1);
        
        smaximo3.setMaximum(sgenes.getValue()-1);
        smaximo3.setMinimum(1);
    }//GEN-LAST:event_sgenesStateChanged

    private void sgeneracionesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sgeneracionesStateChanged
        // TODO add your handling code here:
         tgeneraciones.setText(""+sgeneraciones.getValue());
    }//GEN-LAST:event_sgeneracionesStateChanged

    private void smaximoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_smaximoStateChanged
        // TODO add your handling code here:
        tmaximo.setText(""+smaximo.getValue());
    }//GEN-LAST:event_smaximoStateChanged

    private void cruzamaneraAdaptativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cruzamaneraAdaptativaActionPerformed
        // TODO add your handling code here:
        smaximo.setEnabled(false);
        smaximo2.setEnabled(false);
        smaximo3.setEnabled(false);
    }//GEN-LAST:event_cruzamaneraAdaptativaActionPerformed

    private void cruzapuntoUniformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cruzapuntoUniformeActionPerformed
        // TODO add your handling code here:
        smaximo.setEnabled(false);
        smaximo2.setEnabled(false);
        smaximo3.setEnabled(false);
    }//GEN-LAST:event_cruzapuntoUniformeActionPerformed

    private void smuestraStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_smuestraStateChanged
        // TODO add your handling code here:
        tmuestra.setText(""+smuestra.getValue());
        smuestra.setMaximum(sindividuos.getValue());
        smuestra.setMinimum(2);
    }//GEN-LAST:event_smuestraStateChanged

    private void seleccionTorneoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionTorneoActionPerformed
        // TODO add your handling code here:
        smuestra.setEnabled(true);
        tmuestra.setEnabled(true);
    }//GEN-LAST:event_seleccionTorneoActionPerformed

    private void seleccionAletotiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionAletotiaActionPerformed
        // TODO add your handling code here:
        smuestra.setEnabled(false);
        tmuestra.setEnabled(false);
    }//GEN-LAST:event_seleccionAletotiaActionPerformed

    private void seleccionRuletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionRuletaActionPerformed
        // TODO add your handling code here:
        smuestra.setEnabled(false);
        tmuestra.setEnabled(false);
    }//GEN-LAST:event_seleccionRuletaActionPerformed

    private void seleccionMuestreoEstocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionMuestreoEstocoActionPerformed
        // TODO add your handling code here:
        smuestra.setEnabled(false);
        tmuestra.setEnabled(false);
    }//GEN-LAST:event_seleccionMuestreoEstocoActionPerformed

    private void mutacionPorInvercionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mutacionPorInvercionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mutacionPorInvercionActionPerformed

    private void porcentajeMutacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porcentajeMutacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_porcentajeMutacionActionPerformed

    private void cruzaunPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cruzaunPuntoActionPerformed
        // TODO add your handling code here:
        smaximo.setEnabled(false);
        smaximo2.setEnabled(false);
        smaximo3.setEnabled(false);
    }//GEN-LAST:event_cruzaunPuntoActionPerformed

    private void cruzaMultipuntoAdaptativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cruzaMultipuntoAdaptativaActionPerformed
        // TODO add your handling code here:
        smaximo.setEnabled(false);
        smaximo2.setEnabled(false);
        smaximo3.setEnabled(true);
    }//GEN-LAST:event_cruzaMultipuntoAdaptativaActionPerformed

    private void cruzaMultipuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cruzaMultipuntoActionPerformed
        // TODO add your handling code here:
        smaximo.setEnabled(true);
        smaximo2.setEnabled(false);
        smaximo3.setEnabled(false);
    }//GEN-LAST:event_cruzaMultipuntoActionPerformed

    private void cruzaMultipuntoUniformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cruzaMultipuntoUniformeActionPerformed
        // TODO add your handling code here:
        smaximo.setEnabled(false);
        smaximo2.setEnabled(true);
        smaximo3.setEnabled(false);
    }//GEN-LAST:event_cruzaMultipuntoUniformeActionPerformed

    private void cruzadosPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cruzadosPuntosActionPerformed
        // TODO add your handling code here:
        smaximo.setEnabled(false);
        smaximo2.setEnabled(false);
        smaximo3.setEnabled(false);
    }//GEN-LAST:event_cruzadosPuntosActionPerformed

    private void smaximo2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_smaximo2StateChanged
        // TODO add your handling code here:
        tmaximo2.setText(""+smaximo2.getValue());
    }//GEN-LAST:event_smaximo2StateChanged

    private void smaximo3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_smaximo3StateChanged
        // TODO add your handling code here:
        tmaximo3.setText(""+smaximo3.getValue());
    }//GEN-LAST:event_smaximo3StateChanged
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton cruzaMultipunto;
    private javax.swing.JRadioButton cruzaMultipuntoAdaptativa;
    private javax.swing.JRadioButton cruzaMultipuntoUniforme;
    private javax.swing.JRadioButton cruzadosPuntos;
    private javax.swing.JRadioButton cruzamaneraAdaptativa;
    private javax.swing.JRadioButton cruzapuntoUniforme;
    private javax.swing.ButtonGroup cruzas;
    private javax.swing.JRadioButton cruzaunPunto;
    private javax.swing.JButton generar;
    private javax.swing.JCheckBox guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.ButtonGroup mutacion;
    private javax.swing.JRadioButton mutacionPorInvercion;
    private javax.swing.JPanel operadoresDeCruzaMultipunto;
    private javax.swing.JPanel operadoresDeCruzadeUnpunto;
    private javax.swing.JPanel operadoresDeSeleccion;
    private javax.swing.JPanel operadoresdeMutacion;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel parametros;
    private javax.swing.JTabbedPane pesta√±as;
    private javax.swing.JComboBox porcentajeMutacion;
    private javax.swing.JRadioButton seleccionAletotia;
    private javax.swing.JRadioButton seleccionMuestreoEstoco;
    private javax.swing.JRadioButton seleccionRuleta;
    private javax.swing.JRadioButton seleccionTorneo;
    private javax.swing.ButtonGroup seleciones;
    private javax.swing.JSlider sgeneraciones;
    private javax.swing.JSlider sgenes;
    private javax.swing.JSlider sindividuos;
    private javax.swing.JSlider smaximo;
    private javax.swing.JSlider smaximo2;
    private javax.swing.JSlider smaximo3;
    private javax.swing.JSlider smuestra;
    private javax.swing.JTextField tgeneraciones;
    private javax.swing.JTextField tgenes;
    private javax.swing.JTextField tindividuos;
    private javax.swing.JTextField tmaximo;
    private javax.swing.JTextField tmaximo2;
    private javax.swing.JTextField tmaximo3;
    private javax.swing.JTextField tmuestra;
    private javax.swing.JPanel visualizacion;
    // End of variables declaration//GEN-END:variables
}
